{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Thapa-React\\\\thapaapp\\\\src\\\\Slotm.jsx\";\nimport React from \"react\";\n\nconst Slotm = props => {\n  // let x = \"‚ù§\";\n  // let y = \"‚ù§\";\n  // let z = \"üëç\";\n  let x = props.x;\n  let y = props.y;\n  let z = props.z;\n\n  if (props.x === props.y && props.y === props.z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, y, z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"this is Matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, y, z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"this is Not Matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = Slotm;\nexport default Slotm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slotm\");","map":{"version":3,"sources":["D:/Thapa-React/thapaapp/src/Slotm.jsx"],"names":["React","Slotm","props","x","y","z"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB;AACA;AACA;AAEA,MAAIC,CAAC,GAAGD,KAAK,CAACC,CAAd;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACE,CAAd;AACA,MAAIC,CAAC,GAAGH,KAAK,CAACG,CAAd;;AACA,MAAKH,KAAK,CAACC,CAAN,KAAYD,KAAK,CAACE,CAAnB,IAA0BF,KAAK,CAACE,CAAN,KAAYF,KAAK,CAACG,CAAhD,EAAoD;AAClD,wBACE;AAAA,6BACE;AAAA,gCACE;AAAA,qBACGF,CADH,EAEGC,CAFH,EAGGC,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAeD,GAhBD,MAgBO;AACL,wBACE;AAAA,6BACE;AAAA,gCACE;AAAA,qBACGF,CADH,EAEGC,CAFH,EAGGC,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAaD;AACF,CAvCD;;KAAMJ,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Slotm = props => {\r\n  // let x = \"‚ù§\";\r\n  // let y = \"‚ù§\";\r\n  // let z = \"üëç\";\r\n\r\n  let x = props.x;\r\n  let y = props.y;\r\n  let z = props.z;\r\n  if ((props.x === props.y) && (props.y === props.z)) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>\r\n            {x}\r\n            {y}\r\n            {z}\r\n          </h1>\r\n          <h1>this is Matching</h1>\r\n          <hr />\r\n        </div>\r\n      </>\r\n    );\r\n      \r\n    \r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>\r\n            {x}\r\n            {y}\r\n            {z}\r\n          </h1>\r\n          <h1>this is Not Matching</h1>\r\n          <hr />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Slotm;\r\n"]},"metadata":{},"sourceType":"module"}